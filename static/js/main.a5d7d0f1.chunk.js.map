{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","removeLight","sortField","sortType","App","useState","setSortField","isReversed","setIsReversed","sortedGoods","goods","prepearedGoods","sort","good1","good2","localeCompare","reverse","getPrepearedGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2B1B,IAAMC,EAAc,SAACC,EAAWC,GAAZ,MAA0B,CAC5C,WAAYD,IAAcC,IAGfC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOH,EAAP,KAAkBI,EAAlB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACMC,EAhCR,SAA2BC,EAA3B,GAA8D,IAA1BR,EAAyB,EAAzBA,UAAWK,EAAc,EAAdA,WACvCI,EAAc,YAAOD,GAqB3B,OAnBIR,GACFS,EAAeC,MAAK,SAACC,EAAOC,GAC1B,OAAQZ,GACN,KAAKH,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMX,GAAaY,EAAMZ,GAElC,QACE,OAAO,MAKXK,GACFI,EAAeK,UAGVL,EAUaM,CAClBnB,EAAiB,CAAEI,YAAWK,eAYhC,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaP,IAC5BqB,KAAK,SACLF,UAAWG,IAAG,iBACZpB,EAAYC,EAAWH,IAJ3B,iCASA,wBACEoB,QAAS,kBAAMb,EAAaN,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,oBACZpB,EAAYC,EAAWF,IAJ3B,4BASA,wBACEmB,QA1BQ,WACdX,GAAeD,IA0BTa,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAad,IAJjB,sBAUEA,GAAcL,IAEZ,wBACEiB,QA3CE,WACZb,EAAa,IACbE,GAAc,IA0CJY,KAAK,SACLF,UAAU,4BAHZ,sBAWN,6BACGT,EAAYa,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a5d7d0f1.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPrepearedGoods(goods, { sortField, isReversed }) {\n  const prepearedGoods = [...goods];\n\n  if (sortField) {\n    prepearedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    prepearedGoods.reverse();\n  }\n\n  return prepearedGoods;\n}\n\nconst removeLight = (sortField, sortType) => ({\n  'is-light': sortField !== sortType,\n});\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods = getPrepearedGoods(\n    goodsFromServer, { sortField, isReversed },\n  );\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info',\n            removeLight(sortField, SORT_FIELD_ALPHABET))}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            removeLight(sortField, SORT_FIELD_LENGTH))}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortField)\n          && (\n            <button\n              onClick={reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n\n      </div>\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}